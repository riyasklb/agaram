import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:flutter/material.dart';
import 'package:flutter_screenutil/flutter_screenutil.dart';
import 'package:google_fonts/google_fonts.dart';

class SubscriptionDetailsScreen extends StatelessWidget {
  final String uid; // User ID to retrieve specific user's subscriptions

  const SubscriptionDetailsScreen({Key? key, required this.uid}) : super(key: key);

  Future<Map<String, dynamic>?> fetchSubscriptionDetails() async {
    try {
      // Retrieve the user's subscription details from Firestore
      DocumentSnapshot doc = await FirebaseFirestore.instance
          .collection('agaram')
          .doc('user_delivery')
          .collection('users')
          .doc(uid)
          .get();

      return doc.exists ? doc['subscription'] as Map<String, dynamic>? : null;
    } catch (e) {
      print("Error fetching subscription details: $e");
      return null;
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        backgroundColor: Colors.blue,
        title: Text(
          'Subscription Details',
          style: GoogleFonts.lato(
            fontSize: 24.sp,
            fontWeight: FontWeight.bold,
            color: Colors.white,
          ),
        ),
        centerTitle: true,
      ),
      body: FutureBuilder<Map<String, dynamic>?>(
        future: fetchSubscriptionDetails(),
        builder: (context, snapshot) {
          if (snapshot.connectionState == ConnectionState.waiting) {
            return Center(child: CircularProgressIndicator());
          } else if (snapshot.hasError || snapshot.data == null) {
            return Center(child: Text('No subscription details found.'));
          }

          final subscription = snapshot.data!;
          final List products = subscription['products'] ?? [];

          return Padding(
            padding: EdgeInsets.all(16.0.w),
            child: Column(
              crossAxisAlignment: CrossAxisAlignment.start,
              children: [
                Text(
                  'Total Price: ₹${subscription['total_price']}',
                  style: GoogleFonts.poppins(
                    fontSize: 20.sp,
                    fontWeight: FontWeight.bold,
                    color: Colors.black87,
                  ),
                ),
                SizedBox(height: 8.h),
                Text(
                  'Start Date: ${subscription['start_date'].toDate().toString().split(' ')[0]}',
                  style: GoogleFonts.poppins(
                    fontSize: 16.sp,
                    color: Colors.black87,
                  ),
                ),
                Text(
                  'End Date: ${subscription['end_date'].toDate().toString().split(' ')[0]}',
                  style: GoogleFonts.poppins(
                    fontSize: 16.sp,
                    color: Colors.black87,
                  ),
                ),
                SizedBox(height: 16.h),
                Text(
                  'Products:',
                  style: GoogleFonts.poppins(
                    fontSize: 18.sp,
                    fontWeight: FontWeight.bold,
                    color: Colors.black,
                  ),
                ),
                SizedBox(height: 8.h),
                Expanded(
                  child: ListView.builder(
                    itemCount: products.length,
                    itemBuilder: (context, index) {
                      final product = products[index];
                      return Card(
                        margin: EdgeInsets.symmetric(vertical: 8.h),
                        child: Padding(
                          padding: EdgeInsets.all(12.0.w),
                          child: Column(
                            crossAxisAlignment: CrossAxisAlignment.start,
                            children: [
                              Text(
                                'Product Name: ${product['name']}',
                                style: GoogleFonts.poppins(
                                  fontSize: 16.sp,
                                  fontWeight: FontWeight.w500,
                                  color: Colors.black87,
                                ),
                              ),
                              Text(
                                'Quantity: ${product['quantity']}',
                                style: GoogleFonts.poppins(
                                  fontSize: 14.sp,
                                  color: Colors.black54,
                                ),
                              ),
                              Text(
                                'Price: ₹${product['price']}',
                                style: GoogleFonts.poppins(
                                  fontSize: 14.sp,
                                  color: Colors.black54,
                                ),
                              ),
                              Text(
                                'Start Date: ${product['start_date'].toDate().toString().split(' ')[0]}',
                                style: GoogleFonts.poppins(
                                  fontSize: 14.sp,
                                  color: Colors.black54,
                                ),
                              ),
                              Text(
                                'End Date: ${product['end_date'].toDate().toString().split(' ')[0]}',
                                style: GoogleFonts.poppins(
                                  fontSize: 14.sp,
                                  color: Colors.black54,
                                ),
                              ),
                            ],
                          ),
                        ),
                      );
                    },
                  ),
                ),
              ],
            ),
          );
        },
      ),
    );
  }
}
